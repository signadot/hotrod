name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 1.16

jobs:
  # run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      customer: ${{ steps.filter.outputs.customer }}
      driver: ${{ steps.filter.outputs.driver }}
      frontend: ${{ steps.filter.outputs.frontend }}
      route: ${{ steps.filter.outputs.route }}
    steps:
    # The paths-filter action requires a checkout step for push events.
    - if: ${{ github.event_name == 'push' }}
      uses: actions/checkout@v2

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          customer:
            - 'services/customer/**'
            - 'cmd/customer.go'
            - 'pkg/**'
          driver:
            - 'services/driver/**'
            - 'cmd/driver.go'
            - 'pkg/**'
          frontend:
            - 'services/frontend/**'
            - 'cmd/frontend.go'
            - 'pkg/**'
          route:
            - 'services/route/**'
            - 'cmd/route.go'
            - 'pkg/**'

  build:
    runs-on: ubuntu-latest
    needs: [changes]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GO_VERSION }}-mod-

    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GO_VERSION }}-build-

    - name: Build
      run: |
        ./build.sh

    - name: Docker Login
      uses: docker/login-action@v1.9.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build customer image
      if: ${{ needs.changes.outputs.customer == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-customer:${{ github.sha }}

    - name: Build driver image
      if: ${{ needs.changes.outputs.driver == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-driver:${{ github.sha }}

    - name: Build frontend image
      if: ${{ needs.changes.outputs.frontend == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-frontend:${{ github.sha }}
      
    - name: Build route image
      if: ${{ needs.changes.outputs.route == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-route:${{ github.sha }}

  update_signadot:
    if: ${{ github.event_name == 'pull_request' }}
    needs: [build, changes]
    runs-on: ubuntu-latest
    steps:
    - name: call signadot API
      id: upsert_workspace
      run: |      
         imageReplacements=()
         if [[ ${{ needs.changes.outputs.customer }} == 'true' ]]
         then
           imageReplacements+=('{"name": "signadot/hotrod-customer", "newTag": "${{ github.sha }}"}')
         fi
         
         if [[ ${{ needs.changes.outputs.driver }} == 'true' ]]
         then
           imageReplacements+=('{"name": "signadot/hotrod-driver", "newTag": "${{ github.sha }}"}')
         fi
         
         if [[ ${{ needs.changes.outputs.frontend }} == 'true' ]]
         then
           imageReplacements+=('{"name": "signadot/hotrod-frontend", "newTag": "${{ github.sha }}"}')
         fi
         
         if [[ ${{ needs.changes.outputs.route }} == 'true' ]]
         then
           imageReplacements+=('{"name": "signadot/hotrod-route", "newTag": "${{ github.sha }}"}')
         fi
         
         printf -v joined '%s,' "${imageReplacements[@]}"
         if [ ${#imageReplacements[@]} -eq 0 ]; then
              echo "no update required"
              exit 0
          else
              echo "${#imageReplacements[@]} image updates found"
          fi
         
         echo ${joined%,}
         RESULT=$(curl -H 'Content-Type: application/json' \
              -H 'Authorization: ApiKey ${{ secrets.SIGNADOT_API_KEY }}' \
              -d  "{\"org\": \"signadot\",
                  \"cluster\": \"demo\",
                  \"namespace\": \"hotrod\",
                  \"defaultService\": \"frontend\",
                  \"defaultServicePort\": 8080,
                  \"images\": [ ${joined%,} ] }" \
         https://api.signadot.com/api/v1/repos/signadot/hotrod/pulls/${{ github.event.number }}/workspaces)
         echo $RESULT
         ERROR=$(jq -r '.error' <<< $RESULT)
         if [ $ERROR != "null" ]; then
           echo "error: $ERROR"
           exit 1
         fi
         URL=$(jq -r '.previewURLs[0]' <<< $RESULT)
         WORKSPACE=$(jq -r '.workspaceIDs[0]' <<< $RESULT)
         echo "::set-output name=preview::$URL"
         echo "::set-output name=workspace::$WORKSPACE"
      shell: bash
    - name: Update PR with Signadot Preview
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        sha: ${{github.event.pull_request.head.sha || github.sha}}
        state: success
        context: "Signadot Workspace Deployed"
        target_url: ${{ steps.upsert_workspace.outputs.preview }}
        description: "Preview URL for your change"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Update PR with Signadot Dashboard URL
      uses: Sibz/github-status-action@v1
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        sha: ${{github.event.pull_request.head.sha || github.sha}}
        state: success
        context: "Signadot Dashboard URL"
        target_url: "https://app.signadot.com/workspace/${{ steps.upsert_workspace.outputs.workspace }}"
        description: "Signadot Dashboard"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
