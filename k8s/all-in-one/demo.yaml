apiVersion: v1
kind: Service
metadata:
  name: customer-db
  labels:
    app: customer-db
spec:
  ports:
  - port: 3306
    name: tcp
    protocol: TCP
  selector:
    app: customer-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: customer-db
spec:
  serviceName: customer-db
  replicas: 1
  selector:
    matchLabels:
      app: customer-db
  template:
    metadata:
      labels:
        app: customer-db
    spec:
      containers:
      - name: mysql
        image: mariadb:latest
        env:
        - name: MYSQL_DATABASE
          value: customer
        - name: MYSQL_ROOT_PASSWORD
          value: abc
        - name: MYSQL_ROOT_HOST
          value: '%'
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        volumeMounts:
        - name: customer-db
          mountPath: /var/lib/mysql
      volumes:
      - name: customer-db
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hotrod
    component: customer
  name: customer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotrod
      component: customer
  strategy: {}
  template:
    metadata:
      labels:
        app: hotrod
        component: customer
      annotations:
        sidecar.signadot.com/inject: "true"
    spec:
      containers:
        - args:
            - customer
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: MYSQL_HOST
              value: "customer-db"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_ROOT_PASSWORD
              value: abc
          image: signadot/hotrod:test
          imagePullPolicy: Always
          name: hotrod
          ports:
            - containerPort: 8081
      restartPolicy: Always
      imagePullSecrets:
      - name: signadot-registry
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hotrod
    component: customer
  name: customer
spec:
  ports:
    - name: http-web
      port: 8081
      targetPort: 8081
  selector:
    app: hotrod
    component: customer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hotrod
    component: driver
  name: driver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotrod
      component: driver
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.signadot.com/inject: "true"
      labels:
        app: hotrod
        component: driver
    spec:
      containers:
        - args:
            - driver
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger
            - name: JAEGER_AGENT_PORT
              value: "6831"
          image: signadot/hotrod:test
          imagePullPolicy: Always
          name: hotrod
          ports:
            - containerPort: 8082
              name: web
      restartPolicy: Always
      imagePullSecrets:
      - name: signadot-registry
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hotrod
    component: driver
  name: driver
spec:
  ports:
    - name: grpc-web
      port: 8082
      targetPort: web
  selector:
    app: hotrod
    component: driver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hotrod
    component: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotrod
      component: frontend
  strategy: {}
  template:
    metadata:
      labels:
        app: hotrod
        component: frontend
      annotations:
        sidecar.signadot.com/inject: "true"
    spec:
      containers:
        - args:
            - frontend
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger
            - name: JAEGER_AGENT_PORT
              value: "6831"
          image: signadot/hotrod:test
          imagePullPolicy: Always
          name: hotrod
          ports:
            - containerPort: 8080
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hotrod
    component: frontend
  name: frontend
spec:
  ports:
    - name: http-web
      port: 8080
      targetPort: 8080
  selector:
    app: hotrod
    component: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hotrod
    component: route
  name: route
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotrod
      component: route
  strategy: {}
  template:
    metadata:
      labels:
        app: hotrod
        component: route
      annotations:
        sidecar.signadot.com/inject: "true"
    spec:
      containers:
        - args:
            - route
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger
            - name: JAEGER_AGENT_PORT
              value: "6831"
          image: signadot/hotrod:test
          imagePullPolicy: Always
          name: hotrod
          ports:
            - containerPort: 8083
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hotrod
    component: route
  name: route
spec:
  ports:
    - name: http-web
      port: 8083
      targetPort: 8083
  selector:
    app: hotrod
    component: route
---
